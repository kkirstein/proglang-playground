/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/tutorial_java_projects.html
 */

buildscript {
    ext.kotlin_version = '1.1.2-3'
    ext.kotlin_version = '1.1.2-2'

  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

// Apply the java plugin to add support for Java
//apply plugin: 'java'
//plugins {
//  id "org.jetbrains.kotlin.jvm" version "1.1.1"
//}
apply plugin: 'kotlin'
//apply plugin: 'kotlin2js'
apply plugin: 'application'

mainClassName = 'benchmark.BenchmarkKt'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.15"

    // The production code uses the SLF4J logging API at compile time
    //compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    testCompile 'org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version'
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
}
